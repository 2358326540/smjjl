class User < ActiveRecord::Base
  # extends ...................................................................
  # includes ..................................................................
  # security (i.e. attr_accessible) ...........................................
  attr_accessor :logname

  # relationships .............................................................
  # validations ...............................................................
  validates :username, uniqueness: true

  # callbacks .................................................................
  after_commit :set_invite_code

  # scopes ....................................................................
  has_many :invitees, -> { order(id: :desc) }, class_name: 'User', foreign_key: :invited_by

  # additional config .........................................................
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable, :recoverable, :rememberable, :trackable, :validatable

  # class methods .............................................................
  # public instance methods ...................................................
  # protected instance methods ................................................
  # private instance methods ..................................................
  private
  def set_invite_code
    return if invite_code.present?
    update_column(:invite_code, "#{id}#{('A'..'Z').to_a.sample(4).join}")
  end

end